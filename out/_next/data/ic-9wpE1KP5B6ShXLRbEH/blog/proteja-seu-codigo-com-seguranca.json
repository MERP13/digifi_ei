{"pageProps":{"page":{"__metadata":{"id":"content/pages/blog/proteja-seu-codigo-com-seguranca.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/pages","relSourcePath":"blog/proteja-seu-codigo-com-seguranca.md","relProjectPath":"content/pages/blog/proteja-seu-codigo-com-seguranca.md","urlPath":"/blog/proteja-seu-codigo-com-seguranca","pageCssClasses":["page-blog","page-blog-proteja-seu-codigo-com-seguranca"]},"layout":"PostLayout","metaTitle":null,"addTitleSuffix":true,"metaTags":[],"title":"Proteja seu código com segurança!","titlePt":"Proteja seu código com segurança!","colors":"colors-d","date":"2023-01-20","excerpt":"A importância do controle de acesso e como usá-lo no Cadence","excerptFr":"A importância do controle de acesso e como usá-lo no Cadence","featuredImage":{"type":"ImageBlock","url":"/images/CAPAS-Proteja seu código com segurança.png","altText":"Proteja seu código com segurança!","caption":"Proteja seu código com segurança!","width":800,"height":450},"media":{"type":"ImageBlock","url":"/images/CAPAS-Proteja seu código com segurança.png","altText":"Proteja seu código com segurança!","caption":"Proteja seu código com segurança!","width":800,"height":450},"bottomSections":[],"markdown_content_pt":"Você sabe o que é controle de acesso? É a restrição de campos, funções e tipos a certos escopos e usuários. É extremamente importante para os desenvolvedores considerarem profundamente para garantir que seu código esteja protegido contra vulnerabilidades potenciais. A tecnologia blockchain certamente teve sua cota justa de bugs e explorações e muitos deles poderiam ter sido evitados com um controle de acesso melhor gerenciado.\n\nEu acredito que todo desenvolvedor deveria ter um entendimento completo do controle de acesso do Cadence antes mesmo de pensar em implantar seu projeto na mainnet. Padrões altos, eu sei, mas estamos lidando com coisas de verdadeiro valor aqui! (e a maioria de vocês provavelmente não vai me ouvir de qualquer maneira e simplesmente copiar o código do Top Shot sem pensar).\n\nAo contrário de muitos idiomas, o Cadence fornece duas camadas diferentes de controle de acesso que são ambas incorporadas ao idioma:\n\nControle de acesso baseado em palavra-chave\nControle de acesso baseado em capacidade\nEu recomendo conferir esses antes de ler mais deste post.\n\nEu não vou fornecer uma explicação detalhada dos diferentes tipos de controle de acesso neste post, mas vou falar sobre algumas das razões para utilizá-los e alguns exemplos de como eles podem ser usados ​​efetivamente em contratos inteligentes.\n\nBem, agora que você já entende o básico da keyword-based access control, vamos falar sobre a segunda camada de controle de acesso no Cadence: Capability-based Access Control.\n\n\n\nCapability-based Access Control\nA segunda camada de controle de acesso no Cadence é baseada em capacidades. Em vez de usar palavras-chave para especificar o nível de acesso de um campo, função ou tipo, as capacidades são usadas para controlar quem tem acesso a ele.\n\nAs capacidades são objetos que representam uma chave para um recurso específico. Quando você tem uma capacidade, você pode acessar o recurso associado a ela. Por exemplo, se você tem uma capacidade para um contrato específico, você pode acessar e chamar as funções desse contrato.\n\nExistem três tipos de capacidades no Cadence:\n\n*   Recipient\n\n*   Signer\n\n*   Contract\n\nA capacidade Recipient é usada para controlar o acesso a recursos que são transferidos para outra conta. Por exemplo, se você quiser transferir uma quantidade específica de tokens para outra conta, você precisaria de uma capacidade Recipient para essa conta.\n\nA capacidade Signer é usada para controlar o acesso a recursos que precisam ser assinados para serem acessados. Por exemplo, se você precisar assinar uma transação para acessar determinadas funções de um contrato, você precisaria de uma capacidade Signer para essa conta.\n\nA capacidade Contract é usada para controlar o acesso a recursos de um contrato específico. Por exemplo, se você quiser chamar uma função de um contrato, você precisaria de uma capacidade Contract para esse contrato.\n\nUsando essas capacidades, você pode criar regras de acesso muito precisas e seguras para seus contratos inteligentes. Por exemplo, você pode garantir que apenas certas contas possam transferir tokens, ou que apenas certas contas possam assinar transações.\n\nAgora que você sabe um pouco sobre keyword-based access control e capability-based access control, você está pronto para criar contratos inteligentes seguros e eficientes usando o Cadence.\n","metaDescription":null,"socialImage":null,"markdown_content":"Você sabe o que é controle de acesso? É a restrição de campos, funções e tipos a certos escopos e usuários. É extremamente importante para os desenvolvedores considerarem profundamente para garantir que seu código esteja protegido contra vulnerabilidades potenciais. A tecnologia blockchain certamente teve sua cota justa de bugs e explorações e muitos deles poderiam ter sido evitados com um controle de acesso melhor gerenciado.\n\nEu acredito que todo desenvolvedor deveria ter um entendimento completo do controle de acesso do Cadence antes mesmo de pensar em implantar seu projeto na mainnet. Padrões altos, eu sei, mas estamos lidando com coisas de verdadeiro valor aqui! (e a maioria de vocês provavelmente não vai me ouvir de qualquer maneira e simplesmente copiar o código do Top Shot sem pensar).\n\nAo contrário de muitos idiomas, o Cadence fornece duas camadas diferentes de controle de acesso que são ambas incorporadas ao idioma:\n\nControle de acesso baseado em palavra-chave\nControle de acesso baseado em capacidade\nEu recomendo conferir esses antes de ler mais deste post.\n\nEu não vou fornecer uma explicação detalhada dos diferentes tipos de controle de acesso neste post, mas vou falar sobre algumas das razões para utilizá-los e alguns exemplos de como eles podem ser usados ​​efetivamente em contratos inteligentes.\n\nBem, agora que você já entende o básico da keyword-based access control, vamos falar sobre a segunda camada de controle de acesso no Cadence: Capability-based Access Control.\n\n\n\n\nCapability-based Access Control\nA segunda camada de controle de acesso no Cadence é baseada em capacidades. Em vez de usar palavras-chave para especificar o nível de acesso de um campo, função ou tipo, as capacidades são usadas para controlar quem tem acesso a ele.\n\nAs capacidades são objetos que representam uma chave para um recurso específico. Quando você tem uma capacidade, você pode acessar o recurso associado a ela. Por exemplo, se você tem uma capacidade para um contrato específico, você pode acessar e chamar as funções desse contrato.\n\nExistem três tipos de capacidades no Cadence:\n\n*   Recipient\n\n*   Signer\n\n*   Contract\n\nA capacidade Recipient é usada para controlar o acesso a recursos que são transferidos para outra conta. Por exemplo, se você quiser transferir uma quantidade específica de tokens para outra conta, você precisaria de uma capacidade Recipient para essa conta.\n\nA capacidade Signer é usada para controlar o acesso a recursos que precisam ser assinados para serem acessados. Por exemplo, se você precisar assinar uma transação para acessar determinadas funções de um contrato, você precisaria de uma capacidade Signer para essa conta.\n\nA capacidade Contract é usada para controlar o acesso a recursos de um contrato específico. Por exemplo, se você quiser chamar uma função de um contrato, você precisaria de uma capacidade Contract para esse contrato.\n\nUsando essas capacidades, você pode criar regras de acesso muito precisas e seguras para seus contratos inteligentes. Por exemplo, você pode garantir que apenas certas contas possam transferir tokens, ou que apenas certas contas possam assinar transações.\n\nAgora que você sabe um pouco sobre keyword-based access control e capability-based access control, você está pronto para criar contratos inteligentes seguros e eficientes usando o Cadence.\n\n"},"site":{"__metadata":{"id":"content/data/config.json","source":"sourcebit-source-filesystem","sourceName":"data","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/data","relSourcePath":"config.json","relProjectPath":"content/data/config.json"},"type":"Config","header":{"headerVariant":"variant-b","isSticky":true,"primaryColors":"colors-b","secondaryColors":"colors-d","isTitleVisible":false,"primaryLinks":[{"type":"Link","label":"Home","altText":"Inicio","url":"/","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"DropdownLink","label":"About","dropdownLinks":[{"type":"Link","label":"Curso Cadence","url":"/curso","altText":"Curso Cadence"},{"type":"Link","label":"Blog","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Learn More","altText":"","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Volunteers","dropdownLinks":[{"type":"Link","label":"2023","altText":"Link to 2023 team's page","url":"/registro/2023","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Advocates","altText":"Advocates","url":"https://flow.coflow.com.br/flow-brasil-embaixador-aprendiz/","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Partnerships","altText":"Parcerias","dropdownLinks":[{"type":"Link","label":"GeekHunter","altText":"Recurtamento e Seleção","url":"/2023/janeiro/parcerias/geekhunter/","showIcon":true,"icon":"arrowRight","iconPosition":"left","elementId":""},{"type":"Link","label":"News","altText":"Novidades","url":"/2023/janeiro/news","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"Link","label":"Blog ","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRightCircle","iconPosition":"left","elementId":""}],"secondaryLinks":[{"type":"Button","label":"Join Discord","altText":"Entrar no Discord","style":"secondary","url":"https://discord.com/invite/hT8EpC5mUN","showIcon":true,"icon":"cart","iconPosition":"right","elementId":""}],"styles":{"self":{"width":"wide","padding":["pl-5","pt-5","pb-5","pr-5"]}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow","width":114,"height":48,"elementId":""},"title":"CoFlow"},"footer":{"variant":"variant-b","colors":"colors-b","contacts":{"addressAltText":"Our address"},"copyrightText":"CoFlow","primaryLinks":[{"type":"Link","label":"Home","url":"/","altText":"Home"},{"type":"Link","label":"Contact Us","altText":"Contact Us","url":"https://wa.me/5521997806363?text=Ol%C3%A1","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"CURSO CADENCE","altText":"CURSO CADENCE","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"TERMO DE USO","altText":"TERMO DE USO","url":"/termo-de-uso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"POLÍTICA DE PRIVACIDADE","altText":"POLÍTICA DE PRIVACIDADE","url":"/politica-de-privacidade","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}],"socialLinks":[{"type":"Social","label":"Email","altText":"","url":"mailto:diegofornalha@gmail.com","icon":"mail","style":"link","elementId":""},{"type":"Social","altText":"Instagram","label":"Instagram","url":"http://www.instagram.com/diegofornalha","icon":"instagram"},{"type":"Social","altText":"Linkedin","label":"Linkedin","url":"https://www.github.com/diegofornalha","icon":"github"},{"type":"Social","label":"Youtube","altText":"Youtube","icon":"youtube","style":"link","elementId":"","url":"https://www.youtube.com/diegofornalha"},{"type":"Social","altText":"Twitter","label":"Twitter","url":"https://twitter.com/diegofornalha","icon":"twitter"},{"type":"Social","label":"Linkedin","altText":"Linkedin","url":"https://linkedin.com/in/diegofornalha","icon":"linkedin","style":"link","elementId":""}],"styles":{"self":{"width":"narrow"}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow Logo","width":114,"height":48,"elementId":""}},"defaultMetaTags":[{"type":"MetaTag","property":"og:title","content":"CoFlow"}],"titleSuffix":"Coflow","env":{}}},"__N_SSG":true}