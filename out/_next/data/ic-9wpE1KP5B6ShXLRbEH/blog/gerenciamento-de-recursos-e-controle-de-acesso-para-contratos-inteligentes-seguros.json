{"pageProps":{"page":{"__metadata":{"id":"content/pages/blog/gerenciamento-de-recursos-e-controle-de-acesso-para-contratos-inteligentes-seguros.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/pages","relSourcePath":"blog/gerenciamento-de-recursos-e-controle-de-acesso-para-contratos-inteligentes-seguros.md","relProjectPath":"content/pages/blog/gerenciamento-de-recursos-e-controle-de-acesso-para-contratos-inteligentes-seguros.md","urlPath":"/blog/gerenciamento-de-recursos-e-controle-de-acesso-para-contratos-inteligentes-seguros","pageCssClasses":["page-blog","page-blog-gerenciamento-de-recursos-e-controle-de-acesso-para-contratos-inteligentes-seguros"]},"layout":"PostLayout","metaTitle":null,"addTitleSuffix":true,"metaTags":[],"title":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","titlePt":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","colors":"colors-d","date":"2023-01-13","featuredImage":{"type":"ImageBlock","url":"/images/CAPAS-Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros.png","altText":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","caption":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","width":800,"height":450},"media":{"type":"ImageBlock","url":"/images/CAPAS-Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros.png","altText":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","caption":"Gerenciamento de recursos e controle de acesso para contratos inteligentes seguros","width":800,"height":450},"bottomSections":[],"markdown_content_pt":"Você já ouviu falar do Cadence? É uma linguagem de programação que acelera e simplifica o desenvolvimento de contratos inteligentes seguros, introduzindo recursos e capacidades avançadas, como composição e aninhamento de recursos. Ao mesmo tempo, o Cadence também é responsável por transações e consultas no Flow.\n\nGerenciando a propriedade\nO Cadence é fácil de aprender, pois tem muitas semelhanças com outras linguagens de programação, como Rust, TypeScript e Swift. A grande diferença é que o Cadence é tudo sobre recursos.\n\nOs recursos são fáceis de entender porque são a coisa real - uma arca de tokens, um momento NBA Topshot - e porque são armazenados diretamente na conta do seu dono. É por isso que o código Cadence é fácil de ler, manter e discutir.\n\nOs tipos de recursos são semelhantes às classes - representam uma coleção de dados e funções. No entanto, eles introduzem regras rígidas sobre como um desenvolvedor pode lidar com eles:\n\n*   Os recursos só podem existir em um único lugar exato e em um único momento exato\n\n*   Os recursos não podem ser copiados\n\n*   Os recursos precisam ser explicitamente destruídos\n\nIsso impede a duplicação prejudicial e a exclusão acidental de um recurso, tornando-os uma boa escolha para aplicativos de blockchain. O operador move, um operador especial para transferir recursos, fornece um indicador visual ao lidar com recursos.\n\nCapabilidades para controle de acesso\nAs capacidades são semelhantes às permissões: elas controlam as ações que um usuário pode realizar em um determinado recurso. Se você quiser chamar um método de recurso, precisa ter uma capacidade válida.\n\nAs capacidades são a porta de entrada para os recursos. Como uma API REST, as capacidades têm um caminho. Se esse caminho estiver no domínio público de uma conta, a capacidade pode ser obtida por qualquer pessoa; as capacidades no domínio privado só são acessíveis pelo dono da conta.\n\nIndependentemente de estar no domínio público ou privado, as capacidades sempre se relacionam com um alvo. Esse alvo pode ser um recurso inteiro ou apenas um subconjunto de seus métodos. Para o último caso, as interfaces podem atuar como alvo para a capacidade. É assim que as capacidades permitem um controle de acesso fino e legível para humanos.\n\n\n\nPara interagir com um recurso, você precisa obter a capacidade específica antes de emprestar seu recurso subjacente. Isso pode ser feito dentro das transações.\n\naccount.getCapability<...>(/public/MyCapability).borrow()\n\nInteragir com transações e scripts\nAs transações permitem que você altere os dados na cadeia. No Flow, as transações são escritas em Cadence. Elas geralmente consistem em duas etapas: Prepare e execute.\n\ntransaction {\nprepare (acct: AuthAccount) {\n...\n}\nexecute {\n...\n}\n}\n\nPara cada assinante da transação, a conta AuthAccount correspondente é passada para a fase de preparação da transação, fornecendo acesso completo à armazenagem, bem como aos domínios privado e público da conta de assinatura.\n\nSe você só quiser consultar dados na cadeia sem alterá-los, poderá executar um script. Em Cadence, os scripts consistem em uma função pública main que é executada na execução:\n\npub fun main () {\nlog(\"Hello world!\")\n}\n\n[Leituras adicionais](https://developers.flow.com/cadence/tutorial/01-first-steps)\nSe você quiser começar a construir rapidamente com Cadence, verifique a série oficial de tutoriais, na qual você codificará todo um mercado com integrações para tokens fungíveis e não fungíveis.\n\n[Cadence tutorial series](https://developers.flow.com/cadence/language)\nQuando você estiver procurando uma documentação mais abrangente e aprofundada do idioma, verifique a documentação completa do Cadence:\n\nCadence language reference\nA qualquer momento em que você quiser experimentar o Cadence sem ter que configurar um ambiente de desenvolvimento local, dê uma olhada no Cadence Playground:\n\n[Cadence playground](https://play.flow.com/local-project)\n","metaDescription":null,"socialImage":null,"markdown_content":"Você já ouviu falar do Cadence? É uma linguagem de programação que acelera e simplifica o desenvolvimento de contratos inteligentes seguros, introduzindo recursos e capacidades avançadas, como composição e aninhamento de recursos. Ao mesmo tempo, o Cadence também é responsável por transações e consultas no Flow.\n\nGerenciando a propriedade\nO Cadence é fácil de aprender, pois tem muitas semelhanças com outras linguagens de programação, como Rust, TypeScript e Swift. A grande diferença é que o Cadence é tudo sobre recursos.\n\nOs recursos são fáceis de entender porque são a coisa real - uma arca de tokens, um momento NBA Topshot - e porque são armazenados diretamente na conta do seu dono. É por isso que o código Cadence é fácil de ler, manter e discutir.\n\nOs tipos de recursos são semelhantes às classes - representam uma coleção de dados e funções. No entanto, eles introduzem regras rígidas sobre como um desenvolvedor pode lidar com eles:\n\n*   Os recursos só podem existir em um único lugar exato e em um único momento exato\n\n*   Os recursos não podem ser copiados\n\n*   Os recursos precisam ser explicitamente destruídos\n\nIsso impede a duplicação prejudicial e a exclusão acidental de um recurso, tornando-os uma boa escolha para aplicativos de blockchain. O operador move, um operador especial para transferir recursos, fornece um indicador visual ao lidar com recursos.\n\nCapabilidades para controle de acesso\nAs capacidades são semelhantes às permissões: elas controlam as ações que um usuário pode realizar em um determinado recurso. Se você quiser chamar um método de recurso, precisa ter uma capacidade válida.\n\nAs capacidades são a porta de entrada para os recursos. Como uma API REST, as capacidades têm um caminho. Se esse caminho estiver no domínio público de uma conta, a capacidade pode ser obtida por qualquer pessoa; as capacidades no domínio privado só são acessíveis pelo dono da conta.\n\nIndependentemente de estar no domínio público ou privado, as capacidades sempre se relacionam com um alvo. Esse alvo pode ser um recurso inteiro ou apenas um subconjunto de seus métodos. Para o último caso, as interfaces podem atuar como alvo para a capacidade. É assim que as capacidades permitem um controle de acesso fino e legível para humanos.\n\n\n\nPara interagir com um recurso, você precisa obter a capacidade específica antes de emprestar seu recurso subjacente. Isso pode ser feito dentro das transações.\n\naccount.getCapability<...>(/public/MyCapability).borrow()\n\nInteragir com transações e scripts\nAs transações permitem que você altere os dados na cadeia. No Flow, as transações são escritas em Cadence. Elas geralmente consistem em duas etapas: Prepare e execute.\n\ntransaction {\nprepare (acct: AuthAccount) {\n...\n}\nexecute {\n...\n}\n}\n\nPara cada assinante da transação, a conta AuthAccount correspondente é passada para a fase de preparação da transação, fornecendo acesso completo à armazenagem, bem como aos domínios privado e público da conta de assinatura.\n\nSe você só quiser consultar dados na cadeia sem alterá-los, poderá executar um script. Em Cadence, os scripts consistem em uma função pública main que é executada na execução:\n\npub fun main () {\nlog(\"Hello world!\")\n}\n\n[Leituras adicionais](https://developers.flow.com/cadence/tutorial/01-first-steps)\nSe você quiser começar a construir rapidamente com Cadence, verifique a série oficial de tutoriais, na qual você codificará todo um mercado com integrações para tokens fungíveis e não fungíveis.\n\n[Cadence tutorial series](https://developers.flow.com/cadence/language)\nQuando você estiver procurando uma documentação mais abrangente e aprofundada do idioma, verifique a documentação completa do Cadence:\n\nCadence language reference\nA qualquer momento em que você quiser experimentar o Cadence sem ter que configurar um ambiente de desenvolvimento local, dê uma olhada no Cadence Playground:\n\n[Cadence playground](https://play.flow.com/local-project)\n"},"site":{"__metadata":{"id":"content/data/config.json","source":"sourcebit-source-filesystem","sourceName":"data","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/data","relSourcePath":"config.json","relProjectPath":"content/data/config.json"},"type":"Config","header":{"headerVariant":"variant-b","isSticky":true,"primaryColors":"colors-b","secondaryColors":"colors-d","isTitleVisible":false,"primaryLinks":[{"type":"Link","label":"Home","altText":"Inicio","url":"/","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"DropdownLink","label":"About","dropdownLinks":[{"type":"Link","label":"Curso Cadence","url":"/curso","altText":"Curso Cadence"},{"type":"Link","label":"Blog","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Learn More","altText":"","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Volunteers","dropdownLinks":[{"type":"Link","label":"2023","altText":"Link to 2023 team's page","url":"/registro/2023","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Advocates","altText":"Advocates","url":"https://flow.coflow.com.br/flow-brasil-embaixador-aprendiz/","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Partnerships","altText":"Parcerias","dropdownLinks":[{"type":"Link","label":"GeekHunter","altText":"Recurtamento e Seleção","url":"/2023/janeiro/parcerias/geekhunter/","showIcon":true,"icon":"arrowRight","iconPosition":"left","elementId":""},{"type":"Link","label":"News","altText":"Novidades","url":"/2023/janeiro/news","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"Link","label":"Blog ","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRightCircle","iconPosition":"left","elementId":""}],"secondaryLinks":[{"type":"Button","label":"Join Discord","altText":"Entrar no Discord","style":"secondary","url":"https://discord.com/invite/hT8EpC5mUN","showIcon":true,"icon":"cart","iconPosition":"right","elementId":""}],"styles":{"self":{"width":"wide","padding":["pl-5","pt-5","pb-5","pr-5"]}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow","width":114,"height":48,"elementId":""},"title":"CoFlow"},"footer":{"variant":"variant-b","colors":"colors-b","contacts":{"addressAltText":"Our address"},"copyrightText":"CoFlow","primaryLinks":[{"type":"Link","label":"Home","url":"/","altText":"Home"},{"type":"Link","label":"Contact Us","altText":"Contact Us","url":"https://wa.me/5521997806363?text=Ol%C3%A1","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"CURSO CADENCE","altText":"CURSO CADENCE","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"TERMO DE USO","altText":"TERMO DE USO","url":"/termo-de-uso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"POLÍTICA DE PRIVACIDADE","altText":"POLÍTICA DE PRIVACIDADE","url":"/politica-de-privacidade","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}],"socialLinks":[{"type":"Social","label":"Email","altText":"","url":"mailto:diegofornalha@gmail.com","icon":"mail","style":"link","elementId":""},{"type":"Social","altText":"Instagram","label":"Instagram","url":"http://www.instagram.com/diegofornalha","icon":"instagram"},{"type":"Social","altText":"Linkedin","label":"Linkedin","url":"https://www.github.com/diegofornalha","icon":"github"},{"type":"Social","label":"Youtube","altText":"Youtube","icon":"youtube","style":"link","elementId":"","url":"https://www.youtube.com/diegofornalha"},{"type":"Social","altText":"Twitter","label":"Twitter","url":"https://twitter.com/diegofornalha","icon":"twitter"},{"type":"Social","label":"Linkedin","altText":"Linkedin","url":"https://linkedin.com/in/diegofornalha","icon":"linkedin","style":"link","elementId":""}],"styles":{"self":{"width":"narrow"}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow Logo","width":114,"height":48,"elementId":""}},"defaultMetaTags":[{"type":"MetaTag","property":"og:title","content":"CoFlow"}],"titleSuffix":"Coflow","env":{}}},"__N_SSG":true}