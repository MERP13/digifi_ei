{"pageProps":{"page":{"__metadata":{"id":"content/pages/blog/entendendo-como-os-opcionais-funcionam.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/pages","relSourcePath":"blog/entendendo-como-os-opcionais-funcionam.md","relProjectPath":"content/pages/blog/entendendo-como-os-opcionais-funcionam.md","urlPath":"/blog/entendendo-como-os-opcionais-funcionam","pageCssClasses":["page-blog","page-blog-entendendo-como-os-opcionais-funcionam"]},"layout":"PostLayout","metaTitle":null,"addTitleSuffix":true,"metaTags":[],"title":"Entendendo como os opcionais funcionam","titlePt":"Entendendo como os opcionais funcionam","colors":"colors-d","excerpt":"Como evitar e corrigir erros de referências vazias em seu código","excerptFr":"Como evitar e corrigir erros de referências vazias em seu código","featuredImage":{"type":"ImageBlock","url":"/images/CAPAS-Entendendo como os opcionais funcionam.png","altText":"Como evitar e corrigir erros de referências vazias em seu código","caption":"Como evitar e corrigir erros de referências vazias em seu código","width":800,"height":450},"media":{"type":"ImageBlock","url":"/images/CAPAS-Entendendo como os opcionais funcionam.png","altText":"Como evitar e corrigir erros de referências vazias em seu código","caption":"Como evitar e corrigir erros de referências vazias em seu código","width":800,"height":450},"bottomSections":[],"markdown_content_pt":"Hoje, vou falar sobre um aspecto do Cadence com o qual muitas pessoas têm dificuldade de se familiarizar: os Optionais!\n\nOs Optionais são como o gato de Schrödinger da programação.\n\nOu são mesmo?\n\nDesculpem, péssima analogia, mas vocês entenderão de onde venho quando terminarem de ler.\n\nMas afinal, o que são Optionais?\nOs Optionais no Cadence são uma forma segura e poderosa de se usar variáveis em linguagens de programação. Eles podem ser difíceis de se acostumar, no entanto!\n\nOs Optionais dizem ou \"há um valor, e ele é x\" ou \"não há valor algum\". Então, o valor foi definido ou, mais importante, não foi definido. Os Optionais são inicializados como nil (que técnicamente é um valor) quando eles não possuem um valor específico do seu tipo.\n\nQualquer tipo pode ser um Optional. Você declara um tipo Optional usando um ? após a declaração da variável, assim:\n\n// Declarando um Optional String\nvar nome: String?\nAo atribuir um valor a um Optional, você pode atribuir como se o tipo não fosse Optional:\n\nnome = \"Josh\"\nmas também pode atribuir o valor nil ao Optional.\n\nnome = nil\nMas por que eu iria querer dizer que algo é nil?\nOs Optionais permitem que o software possa lidar com casos de erro e situações semelhantes de forma mais elegante.\n\nO objetivo principal é tornar o estado de uma variável de indisponível/vazio/nada explícito e, ainda mais, tornar explícito quando algo nunca poderá ser indisponível/vazio/nada. Em linguagens que permitem que qualquer variável seja nula, nem sempre é claro se a variável pode ser nula na localização específica do código, o que leva a dois problemas:\n\nOu o caso nulo não é tratado pelo programador, e então há um valor nulo, causando uma referência nula, ou \"null reference\", no código. Isso ocorre quando uma variável é utilizada sem ter sido inicializada ou atribuída um valor válido. Isso pode causar erros e problemas no funcionamento do programa.\n\n\n\n","metaDescription":null,"socialImage":null,"date":"2023-01-11","markdown_content":"Hoje, vou falar sobre um aspecto do Cadence com o qual muitas pessoas têm dificuldade de se familiarizar: os Optionais!\n\nOs Optionais são como o gato de Schrödinger da programação.\n\nOu são mesmo?\n\nDesculpem, péssima analogia, mas vocês entenderão de onde venho quando terminarem de ler.\n\nMas afinal, o que são Optionais?\nOs Optionais no Cadence são uma forma segura e poderosa de se usar variáveis em linguagens de programação. Eles podem ser difíceis de se acostumar, no entanto!\n\nOs Optionais dizem ou \"há um valor, e ele é x\" ou \"não há valor algum\". Então, o valor foi definido ou, mais importante, não foi definido. Os Optionais são inicializados como nil (que técnicamente é um valor) quando eles não possuem um valor específico do seu tipo.\n\nQualquer tipo pode ser um Optional. Você declara um tipo Optional usando um ? após a declaração da variável, assim:\n\n// Declarando um Optional String\nvar nome: String?\nAo atribuir um valor a um Optional, você pode atribuir como se o tipo não fosse Optional:\n\nnome = \"Josh\"\nmas também pode atribuir o valor nil ao Optional.\n\nnome = nil\nMas por que eu iria querer dizer que algo é nil?\nOs Optionais permitem que o software possa lidar com casos de erro e situações semelhantes de forma mais elegante.\n\nO objetivo principal é tornar o estado de uma variável de indisponível/vazio/nada explícito e, ainda mais, tornar explícito quando algo nunca poderá ser indisponível/vazio/nada. Em linguagens que permitem que qualquer variável seja nula, nem sempre é claro se a variável pode ser nula na localização específica do código, o que leva a dois problemas:\n\nOu o caso nulo não é tratado pelo programador, e então há um valor nulo, causando uma referência nula, ou \"null reference\", no código. Isso ocorre quando uma variável é utilizada sem ter sido inicializada ou atribuída um valor válido. Isso pode causar erros e problemas no funcionamento do programa.\n\n\n\n\n\n"},"site":{"__metadata":{"id":"content/data/config.json","source":"sourcebit-source-filesystem","sourceName":"data","sourcePath":"/Users/coflow/Desktop/digifi_ei/content/data","relSourcePath":"config.json","relProjectPath":"content/data/config.json"},"type":"Config","header":{"headerVariant":"variant-b","isSticky":true,"primaryColors":"colors-b","secondaryColors":"colors-d","isTitleVisible":false,"primaryLinks":[{"type":"Link","label":"Home","altText":"Inicio","url":"/","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"DropdownLink","label":"About","dropdownLinks":[{"type":"Link","label":"Curso Cadence","url":"/curso","altText":"Curso Cadence"},{"type":"Link","label":"Blog","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Learn More","altText":"","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Volunteers","dropdownLinks":[{"type":"Link","label":"2023","altText":"Link to 2023 team's page","url":"/registro/2023","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"Advocates","altText":"Advocates","url":"https://flow.coflow.com.br/flow-brasil-embaixador-aprendiz/","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"DropdownLink","label":"Partnerships","altText":"Parcerias","dropdownLinks":[{"type":"Link","label":"GeekHunter","altText":"Recurtamento e Seleção","url":"/2023/janeiro/parcerias/geekhunter/","showIcon":true,"icon":"arrowRight","iconPosition":"left","elementId":""},{"type":"Link","label":"News","altText":"Novidades","url":"/2023/janeiro/news","showIcon":true,"icon":"arrowRight","iconPosition":"right","elementId":""}]},{"type":"Link","label":"Blog ","altText":"Blog","url":"/blog","showIcon":true,"icon":"arrowRightCircle","iconPosition":"left","elementId":""}],"secondaryLinks":[{"type":"Button","label":"Join Discord","altText":"Entrar no Discord","style":"secondary","url":"https://discord.com/invite/hT8EpC5mUN","showIcon":true,"icon":"cart","iconPosition":"right","elementId":""}],"styles":{"self":{"width":"wide","padding":["pl-5","pt-5","pb-5","pr-5"]}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow","width":114,"height":48,"elementId":""},"title":"CoFlow"},"footer":{"variant":"variant-b","colors":"colors-b","contacts":{"addressAltText":"Our address"},"copyrightText":"CoFlow","primaryLinks":[{"type":"Link","label":"Home","url":"/","altText":"Home"},{"type":"Link","label":"Contact Us","altText":"Contact Us","url":"https://wa.me/5521997806363?text=Ol%C3%A1","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"CURSO CADENCE","altText":"CURSO CADENCE","url":"/curso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"TERMO DE USO","altText":"TERMO DE USO","url":"/termo-de-uso","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""},{"type":"Link","label":"POLÍTICA DE PRIVACIDADE","altText":"POLÍTICA DE PRIVACIDADE","url":"/politica-de-privacidade","showIcon":false,"icon":"arrowRight","iconPosition":"right","elementId":""}],"socialLinks":[{"type":"Social","label":"Email","altText":"","url":"mailto:diegofornalha@gmail.com","icon":"mail","style":"link","elementId":""},{"type":"Social","altText":"Instagram","label":"Instagram","url":"http://www.instagram.com/diegofornalha","icon":"instagram"},{"type":"Social","altText":"Linkedin","label":"Linkedin","url":"https://www.github.com/diegofornalha","icon":"github"},{"type":"Social","label":"Youtube","altText":"Youtube","icon":"youtube","style":"link","elementId":"","url":"https://www.youtube.com/diegofornalha"},{"type":"Social","altText":"Twitter","label":"Twitter","url":"https://twitter.com/diegofornalha","icon":"twitter"},{"type":"Social","label":"Linkedin","altText":"Linkedin","url":"https://linkedin.com/in/diegofornalha","icon":"linkedin","style":"link","elementId":""}],"styles":{"self":{"width":"narrow"}},"logo":{"type":"ImageBlock","url":"/images/padrao/flow-coflow-logo.png","altText":"CoFlow Logo","caption":"CoFlow Logo","width":114,"height":48,"elementId":""}},"defaultMetaTags":[{"type":"MetaTag","property":"og:title","content":"CoFlow"}],"titleSuffix":"Coflow","env":{}}},"__N_SSG":true}